#!/usr/bin/env python2.7

import argparse
import logging
import subprocess

parser = argparse.ArgumentParser()
parser.add_argument(
    '-d',
    '--duration',
    default=25
)
parser.add_argument(
    '-v',
    '--verbosity',
    action='store_const',
    default=logging.WARNING,
    const=logging.DEBUG
)
parser.add_argument(
    '--reset',
    action='store_true',
    help="Reset"
)
parser.add_argument(
    '--force',
    action='store_true',
    help="Force completion"
)
parser.add_argument(
    'message',
    nargs=argparse.REMAINDER
)

args = parser.parse_args()
logging.basicConfig(level=args.verbosity)

args.message = ' '.join(args.message).replace('"', '\\"')

if args.force:
    command = 'tell application "Pomodoro" to force completion'
elif args.reset:
    command = 'tell application "Pomodoro" to reset '
elif args.message != "":
    command = 'tell application "Pomodoro" to start "{0}" duration {1}'.format(
        args.message,
        args.duration,
    )
else:
    parser.error('Missing pomodoro message')

logging.debug('Arguments: %s', args)
logging.debug('Command: %s', command)

p = subprocess.Popen(['osascript'], stdin=subprocess.PIPE)
p.communicate(command)
