#!/usr/bin/env ruby
# Wrapper to control apps through applescript

def help
	puts <<-EOS.gsub(/^\t*/, '')
		Simple Apps Control Script
		===========================
		[l]list        - List running apps
		    --id       - Use bundle identifier instead of name
		    --all      - Show everything and not just "visible" processes
		[r]un          - Run app
		[k]ill         - Kill app
		running        - Check if an app is running (returns exit code)
		[h]elp
	EOS
end

IDENTIFIER = ARGV.delete('--id') == nil ? 'name' : 'bundle identifier'
VISIBILITY = ARGV.delete('--all') == nil ? 'whose visible is true' : ''

case ARGV[0]
when 'help', 'h','-h','--help'
	help
when nil,'list','l'
	puts `osascript -e 'tell application "System Events" to return (#{IDENTIFIER} of every process #{VISIBILITY}) '`.split(', ')
when 'run','r'
	puts `osascript -e 'tell application "#{ARGV[1]}" to activate'`
when 'kill','k'
	# Some apps launch and then quit if they were not already running.
	# check to see if the app is actually running before we try to quit it
	exit if`osascript -e 'tell application "System Events" to (#{IDENTIFIER} of processes) contains "#{ARGV[1]}"'`.chomp! == 'false'
	if IDENTIFIER == 'name'
		puts `osascript -e 'tell application "#{ARGV[1]}" to quit'`
	else
		puts `osascript -e 'tell application id "#{ARGV[1]}" to quit'`
	end

when 'running'
	running =  `osascript -e 'tell application "System Events" to (#{IDENTIFIER}  of processes) contains "#{ARGV[1]}"'`.strip
	exit (running == 'true') ? 0 : 1
else
	puts 'Unknown command'
	help
end
